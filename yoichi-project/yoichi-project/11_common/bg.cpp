//=================================================================================
//
// 背景クラス [bg.cpp]
// Author : Konishi Yuuto
//
//=================================================================================

//=================================================================================
// インクルード
//=================================================================================
#include "bg.h"
#include "manager.h"
#include "renderer.h"
#include "texture.h"
#include "xfile.h"
#include "resource_manager.h"

//=================================================================================
// インスタンス生成
//=================================================================================
CBg * CBg::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	// メモリ確保
	CBg *pBg = new CBg;

	// !nullcheck
	if (pBg != NULL)
	{
		pBg->SetPos(pos);
		pBg->SetSize(size);
		// 初期化処理
		pBg->Init();
	}

	return pBg;
}

//=================================================================================
// コンストラクタ
//=================================================================================
CBg::CBg()
{

}

//=================================================================================
// デストラクタ
//=================================================================================
CBg::~CBg()
{
}

//=================================================================================
// 初期化処理
//=================================================================================
HRESULT CBg::Init(void)
{
	// Xファイルのポインタ
	CXfile *pXFile = GET_XFILE_PTR;

	//モデル情報を設定
	BindModel(pXFile->GetXfile(CXfile::XFILE_NUM_BG));
	BindTexture(pXFile->GetXfileTexture(CXfile::XFILE_NUM_BG));

	// 初期化処理
	CModel::Init();

	// 座標情報を与える
	CModel::SetPos(GetPos());

	return S_OK;
}

//=================================================================================
// 終了処理
//=================================================================================
void CBg::Uninit(void)
{
	// 終了処理
	CModel::Uninit();
}

//=================================================================================
// 更新処理
//=================================================================================
void CBg::Update(void)
{
}

//=================================================================================
// 描画処理
//=================================================================================
void CBg::Draw(void)
{
	// Rendererクラスからデバイスを取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	D3DXMATERIAL*pMat;		//マテリアルデータへのポインタ

	//マテリアルデータへのポインタを取得
	pMat = (D3DXMATERIAL*)GetBuffMat()->GetBufferPointer();

	for (int nCntMat = 0; nCntMat < (int)GetNumMat(); nCntMat++)
	{
		// ライトの効果を消す処理
		pDevice->LightEnable(0, false);

		// 描画処理
		CModel::Draw();

		// ライトの効果を付けなおす
		pDevice->LightEnable(0, true);
	}
}