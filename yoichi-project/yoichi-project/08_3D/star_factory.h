#ifndef _STAR_FACTORY_H_
#define _STAR_FACTORY_H_
//=============================================================================
//
// 星の生成クラスヘッダー [star_factory.h]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "main.h"
#include "star.h"
//=============================================================================
// マクロ定義
//=============================================================================
#define STAR_CREATE_SIZE		(8)		// スター配置のサイズ

//=============================================================================
// 前方宣言
//=============================================================================
class CStar;

//=============================================================================
// スター生成クラス
//=============================================================================
class CStarFactory
{
public:
	// アイテムの種類の列挙型
	enum STAR_COLOR
	{
		ITEM_TYPE_NONE = -1,	// 初期値
		ITEM_TYPE_BLUE_WING,	// 青い羽根
		ITEM_TYPE_MAX			// 最大値
	};

	CStarFactory();													// コンストラクタ
	~CStarFactory();												// デストラクタ

	void Init(void);												// 初期化処理
	void Uninit(void);												// 終了処理
	void Update(void);												// 更新処理
	void CreateStar(void);											// アイテムクラスの生成

	static CStarFactory *Create(void);								// インスタンス生成
	void SubStarNum(int nCount, CStar::POS_NUMBER posNum);

private:
	std::vector<CStar*> m_pStar;											// アイテムボックスのポインタ
	bool m_bMapFlag[STAR_CREATE_SIZE][STAR_CREATE_SIZE][STAR_CREATE_SIZE];	// 座標のフラグフラグ
};
#endif
