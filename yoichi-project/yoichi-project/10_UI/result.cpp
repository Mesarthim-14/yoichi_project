//=============================================================================
//
// リザルト処理 [result.cpp]
// Author : Yuuki Ikeda
//
//=============================================================================


//=============================================================================
// インクルード
//=============================================================================
#include "result.h"
#include "manager.h"
#include "renderer.h"
#include "texture.h"
#include "resource_manager.h"
//=============================================================================
// 静的メンバ変数宣言
//=============================================================================
LPDIRECT3DTEXTURE9 m_pTexture[MAX_PLAYER_NUM] = {};

//=============================================================================
// コンストラクタ
//=============================================================================
CResult::CResult()
{
	m_nRank = NULL;
}
//=============================================================================
// デストラクタ
//=============================================================================
CResult::~CResult()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CResult::Init(void)
{
	CPolygon::Init();
	BindTexture(CManager::GetResourceManager()->GetTextureClass()->GetTexture((CTexture::TEXTURE_TYPE)(m_nRank + CTexture::TEXTURE_NUM_RESULT_1ST)));

	return S_OK;
}
//=============================================================================
// 終了処理
//=============================================================================
void CResult::Uninit(void)
{
	CPolygon::Uninit();
}
//=============================================================================
// 更新処理
//=============================================================================
void CResult::Update(void)
{
	CPolygon::Update();
}
//=============================================================================
// 描画処理
//=============================================================================
void CResult::Draw(void)
{
	CPolygon::Draw();
}

//=============================================================================
// クリエイト関数
//=============================================================================
CResult* CResult::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size,int nRank)  
{
	// 初期化処理
	CResult *pResult = new CResult;
	
	pResult->SetPos(pos);
	pResult->SetSize(size);

	// 番号の設定
	pResult->m_nRank = nRank;

	// 初期化処理
	pResult->Init();

	return pResult;
}